{"version":3,"file":"component---src-pages-contact-js-2050cfb89050f98c6546.js","mappings":"iJA6HA,IAxHA,SAAYA,GAAoF,IAAnF,YAAEC,EAAc,GAAE,KAAGC,EAAO,KAAI,KAAEC,EAAO,GAAIC,MAAOC,EAAS,MAAEC,EAAK,SAAEC,GAAUP,EAC3F,MAAM,KAAEQ,IAASC,EAAAA,EAAAA,IAAe,cAgB1BC,EAAkBT,GAAeO,EAAKG,aAAaV,YACnDG,EACJC,GAAaA,EAAUO,IAAG,GACnBJ,EAAKG,aAAaE,QAAUR,EAAUO,IACzC,KACAE,EAAYP,EAAQ,GAAMC,EAAKG,aAAaE,QAAUN,EAAa,KAEzE,OACEQ,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdf,QAEFI,MAAOA,EACPY,cAAkBV,EAAKG,aAAaL,MAAK,QACzCa,KACEL,EACI,CACE,CACEM,IAAK,YACLC,KAAMP,IAGV,GAENX,KAAM,CACJ,CACEmB,KAAK,cACLC,QAASb,GAEX,CACEY,KAAM,WACNC,QAASf,EAAKG,aAAaa,SAASC,KAAK,MAE3C,CACEC,SAAS,WACTH,QAASjB,GAEX,CACEoB,SAAS,iBACTH,QAASb,GAEX,CACEgB,SAAS,UACTH,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASf,EAAKG,aAAagB,QAE7B,CACEL,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASb,IAGVkB,OACCvB,EACI,CACE,CACEqB,SAAU,WACVH,QAASnB,GAEX,CACEsB,SAAU,iBACVH,QAASlB,EAAUwB,OAErB,CACEH,SAAU,kBACVH,QAASlB,EAAUyB,QAErB,CACER,KAAM,eACNC,QAAS,wBAGb,CACE,CACED,KAAM,eACNC,QAAS,aAIlBK,OAAOzB,IAGhB,C,gEC1DA,UA/CoB4B,IAEZhB,EAAAA,cAACiB,EAAAA,EAAM,KACHjB,EAAAA,cAACkB,EAAAA,EAAG,CAAC3B,MAAM,eACXS,EAAAA,cAAA,WAASmB,UAAU,eACfnB,EAAAA,cAAA,MAAImB,UAAU,gBAAe,cAC7BnB,EAAAA,cAAA,WACIA,EAAAA,cAAA,WACIA,EAAAA,cAAA,SAAG,sBACHA,EAAAA,cAAA,QACIO,KAAK,cACLa,OAAO,kCACPC,OAAO,OACPC,GAAG,cACHC,YAAU,GAEVvB,EAAAA,cAAA,SAAOwB,QAAQ,YAAW,iBAC1BxB,EAAAA,cAAA,SACIyB,KAAK,QACLlB,KAAK,WAELe,GAAG,QACHI,UAAQ,EACR,mCAAiC,qCAErC1B,EAAAA,cAAA,UACAA,EAAAA,cAAA,SAAOwB,QAAQ,QAAO,WACtBxB,EAAAA,cAAA,YACI2B,KAAK,KACLpB,KAAK,OAELe,GAAG,UACHI,UAAQ,EACR,mCAAiC,4BAErC1B,EAAAA,cAAA,UACAA,EAAAA,cAAA,SAAOyB,KAAK,SAASG,MAAM,SAC3B5B,EAAAA,cAAA,SAAOyB,KAAK,SAASlB,KAAK,QAAQqB,MAAM,0BACxC5B,EAAAA,cAAA,SAAOyB,KAAK,SAASlB,KAAK,gB","sources":["webpack://markrox.dev/./src/components/Seo.jsx","webpack://markrox.dev/./src/pages/contact.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description = '' , lang = 'en', meta = [], image: metaImage, title, pathname }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image =\n    metaImage && metaImage.src\n      ? `${site.siteMetadata.siteUrl}${metaImage.src}`\n      : null\n  const canonical = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : null\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} - %s`}\n      link={\n        canonical\n          ? [\n              {\n                rel: \"canonical\",\n                href: canonical,\n              },\n            ]\n          : []\n      }\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: \"keywords\",\n          content: site.siteMetadata.keywords.join(\",\"),\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          metaImage\n            ? [\n                {\n                  property: \"og:image\",\n                  content: image,\n                },\n                {\n                  property: \"og:image:width\",\n                  content: metaImage.width,\n                },\n                {\n                  property: \"og:image:height\",\n                  content: metaImage.height,\n                },\n                {\n                  name: \"twitter:card\",\n                  content: \"summary_large_image\",\n                },\n              ]\n            : [\n                {\n                  name: \"twitter:card\",\n                  content: \"summary\",\n                },\n              ]\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }),\n  pathname: PropTypes.string,\n}\n\nexport default Seo\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\nimport \"../styles/contact.module.scss\"\n\nconst ContactPage = () => {\n    return (\n        <Layout>\n            <Seo title=\"Contact Me\" />\n            <section className=\"contactForm\">\n                <h1 className=\"sectionTitle\">Contact Me</h1>\n                <div>\n                    <div>\n                        <p>Send me a message.</p>\n                        <form\n                            name=\"sentMessage\"\n                            action=\"https://formspree.io/f/xnqlpgoo\"\n                            method=\"POST\"\n                            id=\"contactForm\"\n                            noValidate\n                        >\n                            <label htmlFor=\"_replyto\">Email Address</label>\n                            <input\n                                type=\"email\"\n                                name=\"_replyto\"\n                                // placeholder=\"Email Address\"\n                                id=\"email\"\n                                required\n                                data-validation-required-message=\"Please enter your email address.\"\n                            />\n                            <p></p>\n                            <label htmlFor=\"body\">Message</label>\n                            <textarea\n                                rows=\"10\"\n                                name=\"body\"\n                                // placeholder=\"Message\"\n                                id=\"message\"\n                                required\n                                data-validation-required-message=\"Please enter a message.\"\n                            ></textarea>\n                            <p></p>\n                            <input type=\"submit\" value=\"Send\" />\n                            <input type=\"hidden\" name=\"_next\" value=\"//markrox.dev/thanks/\" />\n                            <input type=\"hidden\" name=\"_gotcha\" />\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    )\n}\n\nexport default ContactPage\n"],"names":["_ref","description","lang","meta","image","metaImage","title","pathname","site","useStaticQuery","metaDescription","siteMetadata","src","siteUrl","canonical","React","Helmet","htmlAttributes","titleTemplate","link","rel","href","name","content","keywords","join","property","author","concat","width","height","ContactPage","Layout","Seo","className","action","method","id","noValidate","htmlFor","type","required","rows","value"],"sourceRoot":""}